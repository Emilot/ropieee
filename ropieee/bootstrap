#!/bin/bash

# this script is run on bootup. it runs through the several stages of installation
STAGE_PTR="/boot/RoPieee/.install_stage"
LIB="/opt/RoPieee/lib"

# change to tty 2
chvt 2
systemctl stop getty@tty2
echo "*** Welcome to RoPieee! ***" > /dev/tty2
echo > /dev/tty2





log_to_screen()
{
   echo $1 > /dev/tty2
}

partition_disk()
{
   cat << _EOF_ | fdisk /dev/mmcblk0
p
d
2
n
p
2
$(parted /dev/mmcblk0 -ms unit s p | grep '^2:' | sed 's/:/ /g' | sed 's/s//g' | awk '{ print $2 }')

n
p
w

_EOF_
}

expand_fs()
{
   # Resize Filesystem to new partition size
   resize2fs /dev/mmcblk0p2
}

wait_for_timesync()
{
   loop=1
   while true
   do
      /boot/RoPieee/check_ntp_offset
      test $? -eq 0 && return
      sleep 1
      loop=$( expr $loop + 1 )
      if [ $loop -gt 30 ]
      then
	 echo "... restarting ntpdate ..."
	 systemctl stop ntpd
         systemctl restart ntpdate
	 systemctl start ntpd
	 sleep 1
      fi

      # if this takes more then a minute we're gonna bail out
      test $loop -gt 60 && return
   done
}

detect_touchscreen()
{
  if [ $( lsmod | grep -c rpi_ft5406 ) -gt 0 ] && [ $( cat /proc/cmdline | grep -c bcm2708_fb ) -gt 0 ]
  then
     return 0
  else
     return 1
  fi
}

stage3()
{
   # we're done. this is business as usual
   log_to_screen "... Entering stage 3. We're operational in a sec ..."

   # read config
   . /etc/ropieee.conf

   # just to be sure.
   rm -f /var/lib/pacman/db.lck

   # disable HDMI
   /opt/vc/bin/tvservice -o

   if [ $rp_oem -eq 0 ]
   then
      # make sure Roon logs to RAM
      rm -rf /var/roon/RAATServer/Logs
      mkdir /tmp/raatserver_log
      ln -s /tmp/raatserver_log /var/roon/RAATServer/Logs

      rm -rf /var/roon/RoonBridge/Logs
      mkdir /tmp/roonbridge_log
      ln -s /tmp/roonbridge_log /var/roon/RoonBridge/Logs
   fi

   # wait for NTP
   log_to_screen "... Waiting for NTP synchronization ..."
   wait_for_timesync

   # is there something that needs rescueing?
   /boot/RoPieee/run_rescue_scripts

   # change led control
   systemctl stop ropieee1-led
   /boot/RoPieee/control_led running &

   test "$rp_shutdown_schedule" = "daily" && shutdown -r $rp_reboottime

   if [ "${rp_auto_update}" = "on_boot" ]
   then
      # run updates...
      /opt/RoPieee/sbin/run-updates
   fi

   log_to_screen "... We're ready. RoPieee is RUNNING ..."
   echo " **** RoPieee RUNNING ****"

   # if we're OEM we can start the OEM implementation
   test $rp_oem -eq 1 && systemctl start ropieee-oem

   # let's go to bed...
   while true
   do
      sleep 60
   done
}

stage2()
{
   # we're done with configuring storage.
   echo " **** RoPieee stage 2 ****"
   log_to_screen "... Entering stage (2/3) ..."
   log_to_screen "... Installing additional software. This can take a while ..."
   log_to_screen "... MAKE SURE ROPIEEE HAS INTERNET CONNECTION ..."

   . /etc/ropieee.conf

   # install RoonBridge
   test $rp_oem -eq 0 && $LIB/install_roonbridge

   # and run the updates for the first time
   /opt/RoPieee/sbin/run-updates

   if [ $rp_oem -eq 0 ]
   then
      # let's see if we've got a touchscreen
      if detect_touchscreen
      then
         echo "Touchscreen detected!"
         log_to_screen "... Touchscreen detected ..."
         cat /etc/ropieee.conf |
         sed -e 's/^rp_touchscreen_detected=.*$/rp_touchscreen_detected=1/' > /tmp/ropieee.conf.$$
         cp /tmp/ropieee.conf.$$ /etc/ropieee.conf

         # rotate screen by default
         $LIB/set_touchscreen_orient_rotated

         # increase gpu mem
         sed -i 's/gpu_mem=.*/gpu_mem=256/' /boot/config.txt

         log_to_screen "... Installing touchscreen software ..."
         $LIB/install_touchscreen
      fi
   fi

   # enable the web interface
   systemctl enable ropieee-web

   # enable automatic updates
   systemctl enable ropieee-update.timer

   # remove some leftovers
   rm /root/BOOTSTRAP
   rm /root/ropieee_repo

   echo 3 > $STAGE_PTR

   journalctl > /boot/RoPieee/log/stage2.log
   reboot
}

stage1()
{
   echo " **** RoPieee stage 1 ****"
   log_to_screen "... Entering stage (1/3) ..."
   log_to_screen "... Expanding filesystem. This can take a while ..."

#   expand_fs

   echo 2 > $STAGE_PTR

   journalctl > /boot/RoPieee/log/stage1.log

   log_to_screen "... ready to leave stage 1 ..."
   sleep 5

   reboot
}

stage0()
{
   echo " **** RoPieee stage 0 ****"
   log_to_screen "... Entering stage (0/3) ..."
   log_to_screen "... Repartitioning disk. This can take a while ..."

   partition_disk

   # fix systemd-networkd resolver
   rm /etc/resolv.conf
   ln -s /run/systemd/resolve/resolv.conf /etc/resolv.conf

   # we can skip stage 1 and go immediately to stage 2
   echo 2 > $STAGE_PTR

   mkdir -p /boot/RoPieee/log

   journalctl > /boot/RoPieee/log/stage0.log
   
   log_to_screen "... ready to leave stage 0 ..."
   sleep 5

   systemctl reboot
}



echo "*** bootstrapping RoPieee ***"
BOOTSTRAP_STAGE=$( cat ${STAGE_PTR} )

stage${BOOTSTRAP_STAGE}

# we should never come here
systemctl reboot

exit 0

