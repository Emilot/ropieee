#!/bin/bash

# this script is run on bootup. it runs through the several stages of installation
STAGE_PTR="/boot/RoPieee/.install_stage"
LIB="/opt/RoPieee/lib"



partition_disk()
{
   cat << _EOF_ | fdisk /dev/mmcblk0
p
d
2
n
p
2
$(parted /dev/mmcblk0 -ms unit s p | grep '^2:' | sed 's/:/ /g' | sed 's/s//g' | awk '{ print $2 }')

n
p
w

_EOF_
}

expand_fs()
{
   # Resize Filesystem to new partition size
   #resize2fs /dev/mmcblk0p2

   # for f2fs we can't resize a mounted fs, so we need to switch to rescue mode
   cat << _EOF_ > /tmp/bbbootstrap
umount /
mount /boot
resize.f2fs /dev/mmcblk0p2
sleep 1
echo 2 > /boot/RoPieee/.install_stage
journalctl > /boot/RoPieee/log/stage1.log
systemctl reboot
_EOF_

   systemctl rescue
}

wait_for_timesync()
{
   while true
   do
      /boot/RoPieee/check_ntp_offset
      test $? -eq 0 && return
      sleep 1
   done
}


stage3()
{
   # we're done. this is business as usual
   echo " **** RoPieee RUNNING ****"

   # change led control
   systemctl stop ropieee1-led
   /boot/RoPieee/control_led running &

   wait_for_timesync
   sleep 10

   . /etc/ropieee.conf
   shutdown -r $rp_reboottime

   # let's go to bed...
   while true
   do
      sleep 60
   done
}

stage2()
{
   # we're done with configuring storage.
   echo " **** RoPieee stage 2 ****"

   # install RoonBridge
   $LIB/install_roonbridge

   # enable the web interface
   systemctl enable ropieee1-web

   # enable automatic updates
   systemctl enable ropieee1-update.timer

   echo 3 > $STAGE_PTR

   journalctl > /boot/RoPieee/log/stage2.log
   reboot
}

stage1()
{
   echo " **** RoPieee stage 1 ****"

   expand_fs

   # we're not coming here...
   echo 2 > $STAGE_PTR

   journalctl > /boot/RoPieee/log/stage1.log
   reboot
}

stage0()
{
   echo " **** RoPieee stage 0 ****"

   partition_disk
   
   echo 1 > $STAGE_PTR

   mkdir -p /boot/RoPieee/log
   rm -f /boot/RoPieee/SETUP

   journalctl > /boot/RoPieee/log/stage0.log
   reboot
}



echo "*** bootstrapping RoPieee ***"
BOOTSTRAP_STAGE=$( cat ${STAGE_PTR} )

stage${BOOTSTRAP_STAGE}

exit 0

