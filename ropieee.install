post_install()
{
   CONF=/opt/RoPieee/conf
   LIB=/opt/RoPieee/lib

   # what kind of image is this?
   if [ -f /root/ropieee_repo ]
   then
      ropieee_repo=$( cat /root/ropieee_repo )
   else
      ropieee_repo=stable
   fi

   # is this an OEM setup?
   if [ -f /etc/ropieee-oem.conf ]
   then
      ropieee_oem=1
   else
      ropieee_oem=0
   fi

   hostname=$( cat /etc/hostname )

   # setup initial config file
   if [ ! -f /etc/ropieee.conf ]
   then
      cat << _EOF_ > /etc/ropieee.conf
rp_oem=${ropieee_oem}
rp_arch_base=201804_00
rp_repo=${ropieee_repo}
rp_repo_url=http://repo-__RP_REPO__.ropieee.org/
rp_rescue_branch=master
rp_hostname=${hostname}
rp_audio=ropieee-no-hat
rp_audio_usb=1
rp_reboot_schedule=daily
rp_reboottime=03:04
rp_auto_update=on_boot
rp_timezone=Europe/Amsterdam
rp_touchscreen_detected=0
rp_touchscreen_orientation=rotated
rp_touchscreen_zone=unknown
rp_network_wired_method=dhcp
rp_network_wired_ipaddr=unknown
rp_network_wired_netmask=unknown
rp_network_wired_gateway=unknown
rp_network_wireless_enabled=0
rp_network_wireless_essid=unknown
rp_network_wireless_psk=unknown
rp_raat_dop_enabled=0
rp_raat_software_volume_enabled=0
_EOF_
   fi

   # we're only beginning!
   if [ ! -f /boot/RoPieee/.install_stage ]
   then
      echo 0 > /boot/RoPieee/.install_stage
   fi

   # fix modprobe for usb devices
   cp $CONF/alsa-base.conf /etc/modprobe.d

   # NETWORK: setup devices
   cat << _EOF_ > /etc/systemd/network/wired.network
[Match]
Name=eth0

[Network]
DHCP=ipv4

[DHCP]
RouteMetric=10
_EOF_

   # NETWORK: disable wifi
   $LIB/disable_wifi

   # tune kernel params
   cp $CONF/ropieee.conf /etc/sysctl.d

   # only volatile logging
   cp $CONF/journald.conf /etc/systemd

   # systemd resolved configuration
   cp $CONF/resolved.conf /etc/systemd

   # prepare RoPieee's update mechanism
   mkdir /etc/systemd/system/ropieee-update.timer.d
   cat << _EOF_ > /etc/systemd/system/ropieee-update.timer.d/ropieee-update-override.conf
[Timer]
OnBootSec=15min
_EOF_

   # reload systemd
   systemctl daemon-reload

   # and enable the service of course
   systemctl enable ropieee1-bootstrap.service
   systemctl enable ropieee1-led.service
   systemctl enable ropieee1-reboot.service

   # the update timer is not enabled here, as it is enabled from bootstrap
}

pre_upgrade()
{
   CONF=/opt/RoPieee/conf

   # get the package versions
   new_version=$1
   prev_version=$2

   if [ $( grep -c rp_oem /etc/ropieee.conf ) -eq 0 ]
   then
      echo 'rp_oem=0' >> /etc/ropieee.conf
   fi

   if [ $( grep -c rp_rescue_branch /etc/ropieee.conf ) -eq 0 ]
   then
      echo 'rp_rescue_branch=master' >> /etc/ropieee.conf
   fi

   if [ $( grep -c rp_reboot_schedule /etc/ropieee.conf ) -eq 0 ]
   then
      echo 'rp_rescue_schedule=daily' >> /etc/ropieee.conf
   fi

   if [ $( grep -c rp_arch_base /etc/ropieee.conf ) -eq 0 ]
   then
      echo 'rp_arch_base=201804_00' >> /etc/ropieee.conf
   fi

   if [ $( grep -c rp_repo_url /etc/ropieee.conf ) -eq 0 ]
   then
      echo 'rp_repo_url=http://repo-__RP_REPO__.ropieee.org/' >> /etc/ropieee.conf
   fi

   if [ $( grep -c rp_raat_dop_enabled /etc/ropieee.conf ) -eq 0 ]
   then
      echo 'rp_raat_dop_enabled=0' >> /etc/ropieee.conf
   fi

   if [ $( grep -c rp_raat_software_volume_enabled /etc/ropieee.conf ) -eq 0 ]
   then
      echo 'rp_raat_software_volume_enabled=0' >> /etc/ropieee.conf
   fi
}

post_upgrade()
{
   CONF=/opt/RoPieee/conf

   # get the package versions
   new_version=$1
   prev_version=$2

   ## compat trick due to adding of stage3
   #if [ $( cat /boot/RoPieee/.install_stage ) -eq 2 ]
   #then
   #   echo 3 > /boot/RoPieee/.install_stage
   #fi

   # and replace some configuration files
   #cp $CONF/pacman.conf /etc
   #p $CONF/resolved.conf /etc/systemd

   # run configure
   /opt/RoPieee/sbin/configure

   # and enable the services of course (necessary for updates that introduce new services)
   systemctl enable ropieee1-bootstrap.service
   systemctl enable ropieee1-led.service
   systemctl enable ropieee1-reboot.service

   # reload systemd
   systemctl daemon-reload
}

